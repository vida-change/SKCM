1.
library(UpSetR)          
asFile="asMatrix.txt"    
setwd("C:\\biowolf\\immAS\\08.UpSetR")      


rt=read.table(asFile, header=T, sep="\t", check.names=F, row.names=1)
gene=sapply(strsplit(rownames(rt),"\\|"), "[", 1)
asType=sapply(strsplit(rownames(rt),"\\|"), "[", 3)
upsetList=list(AA=unique(gene[asType=="AA"]),
               AD=unique(gene[asType=="AD"]),
               AP=unique(gene[asType=="AP"]),
               AT=unique(gene[asType=="AT"]),
               ES=unique(gene[asType=="ES"]),
               ME=unique(gene[asType=="ME"]),
               RI=unique(gene[asType=="RI"]) )
upsetData=fromList(upsetList)


pdf(file="upset.pdf", width=9, height=6, onefile=FALSE)
upset(upsetData,
      nsets = 7,                   
      nintersects = 50,            
      order.by = "freq",           
      show.numbers = "yes",        
      number.angles = 20,          
      point.size = 1.5,            
      matrix.color="red",          
      line.size = 0.8,             
      mainbar.y.label = "Gene Intersections", 
      sets.x.label = "Set Size")
dev.off()
library(impute)            
asFile="asMatrix.txt"     
cliFile="time.txt"        
rt=read.table(asFile, header=T, sep="\t", check.names=F)
rt=as.matrix(rt)
rownames(rt)=rt[,1]
exp=rt[,2:ncol(rt)]
dimnames=list(rownames(exp),colnames(exp))
exp=matrix(as.numeric(as.matrix(exp)),nrow=nrow(exp),dimnames=dimnames)


mat=impute.knn(exp)
data=mat$data
data=data[rowMeans(data)>0.05,]
data=data[rowMeans(data)<0.95,]
data=data[apply(data,1,sd)>0.05,]
data=t(data)


cli=read.table(cliFile,sep="\t",check.names=F,header=T,row.names=1)  


sameSample=intersect(row.names(data),row.names(cli))
data=data[sameSample,]
cli=cli[sameSample,]
out=cbind(cli,data)
out=cbind(id=row.names(out),out)
write.table(out,file="asTime.txt",sep="\t",row.names=F,quote=F)

library(survival)
library(UpSetR)
inputFile="asTime.txt"     
pFilter=0.05               

rt=read.table(inputFile, header=T, sep="\t", check.names=F, row.names=1)

outTab=data.frame()
for(i in colnames(rt[,3:ncol(rt)])){
	cox=coxph(Surv(futime, fustat) ~ rt[,i], data = rt)
	coxSummary=summary(cox)
	coxP=coxSummary$coefficients[,"Pr(>|z|)"]
	outTab=rbind(outTab,
	             cbind(id=i,
	                   z=coxSummary$coefficients[,"z"],
	                   HR=coxSummary$conf.int[,"exp(coef)"],
	                   HR.95L=coxSummary$conf.int[,"lower .95"],
	                   HR.95H=coxSummary$conf.int[,"upper .95"],
	                   pvalue=coxSummary$coefficients[,"Pr(>|z|)"])
	             )
}

outTab=outTab[is.na(outTab$pvalue)==FALSE,]
outTab=outTab[order(as.numeric(as.vector(outTab$pvalue))),]
write.table(outTab,file="uniCox.txt",sep="\t",row.names=F,quote=F)

sigTab=outTab[as.numeric(as.vector(outTab$pvalue))<pFilter,]
write.table(sigTab,file="uniCox.Sig.txt",sep="\t",row.names=F,quote=F)

sigGenes=c("futime", "fustat", as.vector(sigTab[,1]))
uniSigExp=rt[,sigGenes]
uniSigExp=cbind(id=row.names(uniSigExp), uniSigExp)
write.table(uniSigExp, file="uniSigExp.txt", sep="\t", row.names=F, quote=F)

gene=sapply(strsplit(sigGenes,"\\|"),"[",1)
asType=sapply(strsplit(sigGenes,"\\|"),"[",3)
upsetList=list(AA=unique(gene[asType=="AA"]),
               AD=unique(gene[asType=="AD"]),
               AP=unique(gene[asType=="AP"]),
               AT=unique(gene[asType=="AT"]),
               ES=unique(gene[asType=="ES"]),
               ME=unique(gene[asType=="ME"]),
               RI=unique(gene[asType=="RI"]) )
upsetData=fromList(upsetList)

pdf(file="uniCoxUpset.pdf", width=8, height=5, onefile=FALSE)
upset(upsetData,
      nsets = 7,                    
      order.by = "freq",            
      show.numbers = "yes",         
      number.angles = 20,          
      point.size = 1.5,            
      matrix.color="red",         
      line.size = 0.8,              
      mainbar.y.label = "Gene Intersections",
      sets.x.label = "Set Size")
dev.off()

library(ggplot2)        
inputFile="uniCox.txt"   
pFilter=0.05               

rt=read.table(inputFile, header=T, sep="\t", check.names=F)    


Significant=ifelse(rt$pvalue<pFilter, "Prognosis AS", "No significant")

p=ggplot(rt, aes(z, -log10(pvalue)))+
    geom_point(aes(col=Significant))+
    scale_color_manual(values=c("green", "red"))+
    labs(title=" ")+ xlab("z-score")+
    geom_vline(xintercept=0, linetype="dotted")+
    theme(plot.title = element_text(size=16, hjust=0.5, face="bold"))
p=p+theme_bw()

pdf("vol.pdf", width=6, height=5)
print(p)
dev.off()



rt=rt[order(as.numeric(as.vector(rt$pvalue))),]
rt=rt[rt$pvalue<pFilter,]
row.names(rt)=rt[,1]
#rt[,1]=gsub("\\|", "\\-", rt[,1])
asTypes=gsub("(.*)\\|(.*)\\|(.*?)", "\\3", row.names(rt)) 


for(asType in levels(factor(asTypes)) ){
	genes=rownames(rt)
	gene=grep(paste0("\\|",asType), genes, value=T)
	geneLength=ifelse(length(gene)>20, 20, length(gene))
	data=rt[gene[1:geneLength],]
		
	data=data[order(as.numeric(as.vector(data$pvalue)),decreasing=T),]
	data$id = factor(data$id,levels=as.character(data[,1]))


	p=ggplot(data,aes(z,id))		
	pbubble = p + geom_point(aes(color=pvalue, size=-1*log10(pvalue)) )
	pr = pbubble + 
		 scale_colour_gradient(low="red", high="skyblue") + 
		 labs(color="pvalue", size="-log10(pvalue)", x="z-score", y="")+
		 guides(color = guide_colourbar(order = 1), size = guide_legend(order = 2))+
		 theme_bw()

	ggsave(paste0("bubble.", asType, ".pdf"),width=5.5,height=5)
}


library("glmnet")
library("survival")
asType=""                    
inputFile="uniSigExp.txt"     
setwd("C:\\biowolf\\immAS\\12.model")     

rt=read.table(inputFile, header=T, sep="\t", check.names=F, row.names=1)
rt$futime[rt$futime<=0]=1
rt$futime=rt$futime/365
genes=colnames(rt)
gene=grep(paste0("\\|",asType), genes, value=T)
geneLength=ifelse(length(gene)>20, 20, length(gene))
rt=rt[,c("futime", "fustat", gene[1:geneLength])]


x=as.matrix(rt[,c(3:ncol(rt))])
y=data.matrix(Surv(rt$futime,rt$fustat))
fit <- glmnet(x, y, family = "cox", maxit = 1000)

pdf("lasso.lambda.pdf")
plot(fit, xvar = "lambda", label = TRUE)
dev.off()


cvfit <- cv.glmnet(x, y, family="cox", maxit = 1000)
pdf("lasso.cvfit.pdf")
plot(cvfit)
abline(v=log(c(cvfit$lambda.min,cvfit$lambda.1se)),lty="dashed")
dev.off()

coef <- coef(fit, s = cvfit$lambda.min)
index <- which(coef != 0)
actCoef <- coef[index]
lassoGene=row.names(coef)[index]
lassoGene=c("futime","fustat",lassoGene)
lassoSigExp=rt[,lassoGene]
lassoSigExp=cbind(id=row.names(lassoSigExp),lassoSigExp)
write.table(lassoSigExp,file="lasso.sigExp.txt",sep="\t",row.names=F,quote=F)

rt=read.table("lasso.sigExp.txt",header=T,sep="\t",check.names=F,row.names=1)
multiCox=coxph(Surv(futime, fustat) ~ ., data = rt)
multiCox=step(multiCox,direction = "both")
multiCoxSum=summary(multiCox)

outTab=data.frame()
outTab=cbind(
             coef=multiCoxSum$coefficients[,"coef"],
             HR=multiCoxSum$conf.int[,"exp(coef)"],
             HR.95L=multiCoxSum$conf.int[,"lower .95"],
             HR.95H=multiCoxSum$conf.int[,"upper .95"],
             pvalue=multiCoxSum$coefficients[,"Pr(>|z|)"])
outTab=cbind(id=row.names(outTab),outTab)
outTab=gsub("`","",outTab)
write.table(outTab,file="multiCox.txt",sep="\t",row.names=F,quote=F)


riskScore=predict(multiCox, type="risk", newdata=rt)
coxGene=rownames(multiCoxSum$coefficients)
coxGene=gsub("`","",coxGene)
outCol=c("futime", "fustat", coxGene)
risk=as.vector(ifelse(riskScore>median(riskScore), "high", "low"))
outTab=cbind(rt[,outCol], riskScore=as.vector(riskScore), risk)
write.table(cbind(id=rownames(outTab),outTab), file="risk.txt", sep="\t", quote=F, row.names=F)

bioSurvival=function(inputFile=null, outFile=null){
	
	rt=read.table(inputFile, header=T, sep="\t", check.names=F)
	
	diff=survdiff(Surv(futime, fustat) ~ risk, data=rt)
	pValue=1-pchisq(diff$chisq, df=1)
	if(pValue<0.001){
		pValue="p<0.001"
	}else{
		pValue=paste0("p=",sprintf("%.03f",pValue))
	}
	fit <- survfit(Surv(futime, fustat) ~ risk, data = rt)
	#print(surv_median(fit))
		

	surPlot=ggsurvplot(fit, 
		           data=rt,
		           conf.int=T,
		           pval=pValue,
		           pval.size=6,
		           surv.median.line = "hv",
		           legend.title="Risk",
		           legend.labs=c("High risk", "Low risk"),
		           xlab="Time(years)",
		           break.time.by = 1,
		           palette=c("red", "blue"),
		           risk.table=TRUE,
		       	   risk.table.title="",
		           risk.table.col = "strata",
		           risk.table.height=.25)
	pdf(file=outFile, onefile=FALSE, width=6.5, height=5.5)
	print(surPlot)
	dev.off()
}

bioSurvival(inputFile="risk.txt", outFile="survival.pdf")

bioForest=function(coxFile=null, forestFile=null, forestCol=null){

	rt <- read.table(coxFile, header=T, sep="\t", check.names=F, row.names=1)
	gene <- rownames(rt)
	hr <- sprintf("%.3f",rt$"HR")
	hrLow  <- sprintf("%.3f",rt$"HR.95L")
	hrHigh <- sprintf("%.3f",rt$"HR.95H")
	Hazard.ratio <- paste0(hr,"(",hrLow,"-",hrHigh,")")
	pVal <- ifelse(rt$pvalue<0.001, "<0.001", sprintf("%.3f", rt$pvalue))
		

	pdf(file=forestFile, width=6.5, height=4.5)
	n <- nrow(rt)
	nRow <- n+1
	ylim <- c(1,nRow)
	layout(matrix(c(1,2),nc=2),width=c(3,2.5))
		

	xlim = c(0,3)
	par(mar=c(4,2.5,2,1))
	plot(1,xlim=xlim,ylim=ylim,type="n",axes=F,xlab="",ylab="")
	text.cex=0.8
	text(0,n:1,gene,adj=0,cex=text.cex)
	text(1.5-0.5*0.2,n:1,pVal,adj=1,cex=text.cex);text(1.5-0.5*0.2,n+1,'pvalue',cex=text.cex,font=2,adj=1)
	text(3.1,n:1,Hazard.ratio,adj=1,cex=text.cex);text(3.1,n+1,'Hazard ratio',cex=text.cex,font=2,adj=1)
		
	
	par(mar=c(4,1,2,1),mgp=c(2,0.5,0))
	xlim = c(0,max(as.numeric(hrLow),as.numeric(hrHigh)))
	plot(1,xlim=xlim,ylim=ylim,type="n",axes=F,ylab="",xaxs="i",xlab="Hazard ratio")
	arrows(as.numeric(hrLow),n:1,as.numeric(hrHigh),n:1,angle=90,code=3,length=0.05,col="darkblue",lwd=3)
	abline(v=1, col="black", lty=2, lwd=2)
	boxcolor = ifelse(as.numeric(hr) > 1, forestCol, forestCol)
	points(as.numeric(hr), n:1, pch = 15, col = boxcolor, cex=2)
	axis(1)
	dev.off()
}


indep=function(riskFile=null,cliFile=null,uniOutFile=null,multiOutFile=null,uniForest=null,multiForest=null){
	risk=read.table(riskFile, header=T, sep="\t", check.names=F, row.names=1)    
	cli=read.table(cliFile, header=T, sep="\t", check.names=F, row.names=1)      
	
¢
	sameSample=intersect(row.names(cli),row.names(risk))
	risk=risk[sameSample,]
	cli=cli[sameSample,]
	rt=cbind(futime=risk[,1], fustat=risk[,2], cli, riskScore=risk[,(ncol(risk)-1)])
	
	
	uniTab=data.frame()
	for(i in colnames(rt[,3:ncol(rt)])){
		 cox <- coxph(Surv(futime, fustat) ~ rt[,i], data = rt)
		 coxSummary = summary(cox)
		 uniTab=rbind(uniTab,
		              cbind(id=i,
		              HR=coxSummary$conf.int[,"exp(coef)"],
		              HR.95L=coxSummary$conf.int[,"lower .95"],
		              HR.95H=coxSummary$conf.int[,"upper .95"],
		              pvalue=coxSummary$coefficients[,"Pr(>|z|)"])
		              )
	}
	write.table(uniTab,file=uniOutFile,sep="\t",row.names=F,quote=F)
	bioForest(coxFile=uniOutFile, forestFile=uniForest, forestCol="green")


	uniTab=uniTab[as.numeric(uniTab[,"pvalue"])<1,]
	rt1=rt[,c("futime", "fustat", as.vector(uniTab[,"id"]))]
	multiCox=coxph(Surv(futime, fustat) ~ ., data = rt1)
	multiCoxSum=summary(multiCox)
	multiTab=data.frame()
	multiTab=cbind(
	             HR=multiCoxSum$conf.int[,"exp(coef)"],
	             HR.95L=multiCoxSum$conf.int[,"lower .95"],
	             HR.95H=multiCoxSum$conf.int[,"upper .95"],
	             pvalue=multiCoxSum$coefficients[,"Pr(>|z|)"])
	multiTab=cbind(id=row.names(multiTab),multiTab)
	write.table(multiTab,file=multiOutFile,sep="\t",row.names=F,quote=F)
	bioForest(coxFile=multiOutFile, forestFile=multiForest, forestCol="red")
}


indep(riskFile="risk.txt",
      cliFile="clinical.txt",
      uniOutFile="uniCox.txt",
      multiOutFile="multiCox.txt",
      uniForest="uniForest.pdf",
      multiForest="multiForest.pdf")



riskFile="risk.txt"       
cliFile="clinical.txt"    

risk=read.table(riskFile, header=T, sep="\t", check.names=F, row.names=1)
risk=risk[,c("futime", "fustat", "riskScore")]


cli=read.table(cliFile, header=T, sep="\t", check.names=F, row.names=1)

samSample=intersect(row.names(risk), row.names(cli))
risk1=risk[samSample,,drop=F]
cli=cli[samSample,,drop=F]
rt=cbind(risk1, cli)


bioCol=rainbow(ncol(rt)-1, s=0.9, v=0.9)



ROC_rt=timeROC(T=risk$futime,delta=risk$fustat,
	           marker=risk$riskScore,cause=1,
	           weighting='aalen',
	           times=c(1,2,3),ROC=TRUE)
pdf(file="ROC.pdf", width=5.5, height=5.5)
plot(ROC_rt,time=1,col=bioCol[1],title=FALSE,lwd=2)
plot(ROC_rt,time=2,col=bioCol[2],add=TRUE,title=FALSE,lwd=2)
plot(ROC_rt,time=3,col=bioCol[3],add=TRUE,title=FALSE,lwd=2)
legend('bottomright',
	   c(paste0('AUC at 1 years: ',sprintf("%.03f",ROC_rt$AUC[1])),
	     paste0('AUC at 2 years: ',sprintf("%.03f",ROC_rt$AUC[2])),
	     paste0('AUC at 3 years: ',sprintf("%.03f",ROC_rt$AUC[3]))),
	   col=bioCol[1:3], lwd=2, bty = 'n')
dev.off()



predictTime=1     
aucText=c()
pdf(file="cliROC.pdf", width=5.5, height=5.5)

i=3
ROC_rt=timeROC(T=risk$futime,
               delta=risk$fustat,
               marker=risk$riskScore, cause=1,
               weighting='aalen',
               times=c(predictTime),ROC=TRUE)
plot(ROC_rt, time=predictTime, col=bioCol[i-2], title=FALSE, lwd=2)
aucText=c(paste0("Risk", ", AUC=", sprintf("%.3f",ROC_rt$AUC[2])))
abline(0,1)

for(i in 4:ncol(rt)){
	ROC_rt=timeROC(T=rt$futime,
				   delta=rt$fustat,
				   marker=rt[,i], cause=1,
				   weighting='aalen',
				   times=c(predictTime),ROC=TRUE)
	plot(ROC_rt, time=predictTime, col=bioCol[i-2], title=FALSE, lwd=2, add=TRUE)
	aucText=c(aucText, paste0(colnames(rt)[i],", AUC=",sprintf("%.3f",ROC_rt$AUC[2])))
}

legend("bottomright", aucText,lwd=2,bty="n",col=bioCol[1:(ncol(rt)-1)])
dev.off()

riskFile="risk.txt"       
cliFile="clinical.txt"      

risk=read.table(riskFile, header=T, sep="\t", check.names=F, row.names=1)
risk$riskScore[risk$riskScore>quantile(risk$riskScore,0.99)]=quantile(risk$riskScore,0.99)

cli=read.table(cliFile, header=T, sep="\t", check.names=F, row.names=1)

samSample=intersect(row.names(risk), row.names(cli))
risk=risk[samSample,"riskScore",drop=F]
cli=cli[samSample,,drop=F]
rt=cbind(risk, cli)


for(clinical in colnames(rt[,2:ncol(rt)])){
	data=rt[c("riskScore", clinical)]
	colnames(data)=c("riskScore", "clinical")
	data=data[(data[,"clinical"]!="unknow"),]

	group=levels(factor(data$clinical))
	data$clinical=factor(data$clinical, levels=group)
	comp=combn(group,2)
	my_comparisons=list()
	for(i in 1:ncol(comp)){my_comparisons[[i]]<-comp[,i]}

	boxplot=ggboxplot(data, x="clinical", y="riskScore", color="clinical",
		          xlab=clinical,
		          ylab="Risk score",
		          legend.title=clinical,
		          add = "jitter")+ 
	    stat_compare_means(comparisons = my_comparisons)
	
	pdf(file=paste0(clinical, ".pdf"), width=5.5, height=5)
	print(boxplot)
	dev.off()
}
